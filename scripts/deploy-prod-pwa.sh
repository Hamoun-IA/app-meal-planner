#!/bin/bash

echo "üöÄ D√©ploiement PWA avec Traefik - Configuration existante"

# Variables
APP_NAME="meal-planner-app"
DOMAIN="appmeal.hamoun.fun"
TRAEFIK_NETWORK="root_default"

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# V√©rifier que Traefik est en cours d'ex√©cution
echo -e "${YELLOW}üîç V√©rification de Traefik...${NC}"
if ! docker network ls | grep -q "$TRAEFIK_NETWORK"; then
    echo -e "${RED}‚ùå Le r√©seau Traefik '$TRAEFIK_NETWORK' n'existe pas${NC}"
    echo -e "${YELLOW}üí° V√©rifiez que Traefik est en cours d'ex√©cution${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Traefik d√©tect√©${NC}"

# V√©rifier les fichiers de configuration
echo -e "${YELLOW}üìã V√©rification des fichiers de configuration...${NC}"

FILES_TO_CHECK=(
    "docker-compose.prod.yml"
    "Dockerfile"
    "public/manifest.json"
    "public/sw.js"
)

for file in "${FILES_TO_CHECK[@]}"; do
    if [ ! -f "$file" ]; then
        echo -e "${RED}‚ùå Fichier manquant: $file${NC}"
        exit 1
    fi
done

echo -e "${GREEN}‚úÖ Fichiers de configuration v√©rifi√©s${NC}"

# G√©n√©rer les ic√¥nes PWA si n√©cessaire
if [ ! -d "public/icons" ]; then
    echo -e "${YELLOW}üé® G√©n√©ration des ic√¥nes PWA...${NC}"
    node scripts/generate-pwa-icons.js
fi

# G√©n√©rer les splash screens si n√©cessaire
if [ ! -d "public/splash" ]; then
    echo -e "${YELLOW}üì± G√©n√©ration des √©crans de d√©marrage...${NC}"
    node scripts/generate-splash-screens.js
fi

# V√©rifier les variables d'environnement
echo -e "${YELLOW}üîß V√©rification des variables d'environnement...${NC}"
if [ -z "$DOMAIN" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Variable DOMAIN non d√©finie, utilisation de la valeur par d√©faut${NC}"
fi

if [ -z "$OPENAI_API_KEY" ]; then
    echo -e "${RED}‚ùå Variable OPENAI_API_KEY manquante${NC}"
    exit 1
fi

# Arr√™ter les conteneurs existants
echo -e "${YELLOW}üõë Arr√™t des conteneurs existants...${NC}"
docker-compose -f docker-compose.prod.yml down

# Construire et d√©marrer les conteneurs
echo -e "${YELLOW}üî® Construction et d√©marrage des conteneurs...${NC}"
docker-compose -f docker-compose.prod.yml up -d --build

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Erreur lors du d√©marrage des conteneurs${NC}"
    exit 1
fi

# Attendre que les conteneurs soient pr√™ts
echo -e "${YELLOW}‚è≥ Attente du d√©marrage des services...${NC}"
sleep 30

# V√©rifier l'√©tat des conteneurs
echo -e "${YELLOW}üîç V√©rification de l'√©tat des conteneurs...${NC}"
docker-compose -f docker-compose.prod.yml ps

# V√©rifier les logs
echo -e "${YELLOW}üìã Logs de l'application:${NC}"
docker-compose -f docker-compose.prod.yml logs --tail=20 app

# Test de connectivit√©
echo -e "${YELLOW}üåê Test de connectivit√©...${NC}"
if command -v curl &> /dev/null; then
    curl -I https://$DOMAIN 2>/dev/null && echo -e "${GREEN}‚úÖ Application accessible${NC}" || echo -e "${RED}‚ùå Application non accessible${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  curl non disponible, test manuel requis${NC}"
fi

echo -e "${GREEN}üéâ D√©ploiement termin√© avec succ√®s !${NC}"
echo -e "${YELLOW}üì± Votre PWA est accessible √†: https://$DOMAIN${NC}"
echo -e "${YELLOW}üß™ Test PWA: https://$DOMAIN/test-pwa.html${NC}"

# Instructions suppl√©mentaires
echo -e "${YELLOW}üìù Instructions:${NC}"
echo -e "1. V√©rifiez que votre domaine pointe vers votre VPS"
echo -e "2. Assurez-vous que le port 80 et 443 sont ouverts"
echo -e "3. Traefik g√©n√©rera automatiquement le certificat SSL"
echo -e "4. Testez l'installation PWA sur mobile"

# V√©rification des middlewares
echo -e "${YELLOW}üîß V√©rification des middlewares Traefik...${NC}"
docker exec traefik traefik config 2>/dev/null | grep -A 5 -B 5 "meal" || echo -e "${YELLOW}‚ö†Ô∏è  Impossible de v√©rifier la configuration Traefik${NC}" 