version: '3.8'

services:
  # PostgreSQL avec extension pgvector
  postgresql:
    image: pgvector/pgvector:pg16
    container_name: babounette_postgresql
    restart: unless-stopped
    environment:
      POSTGRES_DB: babounette_db
      POSTGRES_USER: babounette_user
      POSTGRES_PASSWORD: babounette_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./scripts/init-postgresql.sql:/docker-entrypoint-initdb.d/init-postgresql.sql:ro
    networks:
      - babounette_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U babounette_user -d babounette_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis pour cache et queue
  redis:
    image: redis:7-alpine
    container_name: babounette_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - babounette_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin pour administration PostgreSQL (optionnel)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: babounette_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@babounette.app
      PGADMIN_DEFAULT_PASSWORD: admin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - babounette_network
    depends_on:
      - postgresql

volumes:
  postgresql_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  babounette_network:
    driver: bridge 